# Enunciado: clase Planeta
## Se requiere un programa que modele el concepto de un planeta del sistema solar. 
Un planeta tiene los siguientes atributos:

* Un **nombre** de tipo *String* con valor inicial de *null*
* **Cantidad de satélites** de tipo *int* con valor inicial de *cero*
* **Masa en kilogramos** de tipo *double* con valor inicial de cero
* **Volumen** en kilómetros cúbicos de tipo **double** con valor inicial de cero
* **Diámetro** en kilómetros de tipo *int* con valor inicial de cero.
* Distancia media al Sol en millones de kilómetros, de tipo int con valor inicial de cero
* Tipo de planeta de acuerdo con su tamaño, de tipo enumerado con los siguientes valores posibles: 
GASEOSO, TERRESTRE y ENANO.
* Observable a simple vista, de tipo booleano con valor inicial false

# La clase debe incluir los siguientes métodos:

* La clase debe tener un constructor que inicialice los valores de sus respectivos atributos
* Definir un método que imprima en pantalla los valores de los atributos de un planeta
* Calcular la densidad un planeta, como el cociente entre su masa y su volumen.
* Determinar si un planeta del sistema solar se considera exterior. 
Un planeta exterior está situado más allá del cinturón de asteroides. 
El cinturón de asteroides se encuentra entre 2.1 y 3.4 UA. 
Una unidad astronómica (UA) es la distancia entre la Tierra y el Sol= 149597870 Km

En un método main se deben crear dos planetas 
y mostrar los valores de sus atributos en pantalla. 
Además, se debe imprimir la densidad de cada planeta y 
si el planeta es un planeta exterior del sistema solar



DIAGRAMA:

Se ha definido una clase denominada Planeta con sus respectivos atributos
que representan el nombre del planeta, cantidad de satélites que tiene, su
masa, volumen, diámetro, distancia al Sol y si es observable o no. Para cada
atributo, además de su tipo, se ha agregado su correspondiente valor inicial
o por defecto. También se han definido sus métodos respectivos: 
un constructor que inicializa los valores de sus atributos, un método para imprimir
los valores de sus atributos en pantalla, otro para calcular la densidad (que
devuelve un valor de tipo double) y un último método para determinar si es
un planeta exterior (que devuelve un valor booleano).
El atributo para identificar el tipo de planeta se expresa como una
asociación entre la clase Planeta y la clase TipoPlaneta cuyo nombre es el
nombre del atributo. En UML, las variables enum se identifican con el estereotipo <<enumeration>>, 
que representan un conjunto de valores constantes identificados como atributos en su segundo compartimiento.